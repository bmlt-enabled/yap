"use strict";(self.webpackChunkyapdocs=self.webpackChunkyapdocs||[]).push([[3224],{669:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"helpline/tomato-helpline-routing","title":"Aggregator Helpline Routing","description":"---","source":"@site/docs/helpline/tomato-helpline-routing.md","sourceDirName":"helpline","slug":"/helpline/tomato-helpline-routing","permalink":"/helpline/tomato-helpline-routing","draft":false,"unlisted":false,"editUrl":"https://github.com/bmlt-enabled/yap/edit/main/docs/docs/helpline/tomato-helpline-routing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Specialized Routing","permalink":"/helpline/specialized-routing"},"next":{"title":"Voicemail","permalink":"/helpline/voicemail"}}');var o=n(4848),l=n(8453);const r={},a="Aggregator Helpline Routing",s={},c=[];function h(e){const t={code:"code",h1:"h1",header:"header",hr:"hr",p:"p",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"aggregator-helpline-routing",children:"Aggregator Helpline Routing"})}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.p,{children:"In some cases you might want make use of aggregated helpline information.  This might be a bit nuanced, but it exists."}),"\n",(0,o.jsx)(t.p,{children:"One thing to note about this setting, is that the Aggregator is not able to get service body call handling, so it will be limited to helpline field routing only."}),"\n",(0,o.jsx)(t.p,{children:"You can use this in your config.php, however keep in mind that this would break your admin portal.  Typically, this would be used with a webhook as such."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"override_tomato_helpline_routing=true"})})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const o={},l=i.createContext(o);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);