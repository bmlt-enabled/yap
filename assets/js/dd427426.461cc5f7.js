"use strict";(self.webpackChunkyapdocs=self.webpackChunkyapdocs||[]).push([[7559],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),u=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=u(n),d=r,g=f["".concat(c,".").concat(d)]||f[d]||s[d]||a;return n?o.createElement(g,i(i({ref:t},p),{},{components:n})):o.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5885:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:6},c="Location Lookup Bias",u={unversionedId:"general/location-lookup-bias",id:"general/location-lookup-bias",title:"Location Lookup Bias",description:"---",source:"@site/docs/general/location-lookup-bias.md",sourceDirName:"general",slug:"/general/location-lookup-bias",permalink:"/general/location-lookup-bias",draft:!1,editUrl:"https://github.com/bmlt-enabled/yap/edit/docs/docs/general/location-lookup-bias.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Language Options",permalink:"/general/language-options"},next:{title:"Postal Code Lengths",permalink:"/general/postal-code-lengths"}},p={},s=[],f={toc:s};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"location-lookup-bias"},"Location Lookup Bias"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"By default location lookups are biased toward the US.  You can create a series of refinements by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"$location_lookup_bias")," in config.php."),(0,a.kt)("p",null,"For example say you wanted to lookup Bayonne.  By default Bayonne, New Jersey would be interpreted.  If you were intended for France you would set your config as the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},'static $location_lookup_bias = "country:France";\n')),(0,a.kt)("p",null,"A full listing of available bias options are available here: ",(0,a.kt)("a",{parentName:"p",href:"https://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering"},"https://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering"),'.  You can use as few or as many as you want, by separating each set with pipe "',"|",'" character.'))}d.isMDXComponent=!0}}]);