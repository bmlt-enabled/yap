"use strict";(self.webpackChunkyapdocs=self.webpackChunkyapdocs||[]).push([[937],{7717:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=i(4848),t=i(8453);const o={},s="Configuration Precedence",c={id:"general/configuration-precedence",title:"Configuration Precedence",description:"---",source:"@site/docs/general/configuration-precedence.md",sourceDirName:"general",slug:"/general/configuration-precedence",permalink:"/general/configuration-precedence",draft:!1,unlisted:!1,editUrl:"https://github.com/bmlt-enabled/yap/edit/main/docs/docs/general/configuration-precedence.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Blocklist",permalink:"/general/blocklist"},next:{title:"Custom Geocoding",permalink:"/general/custom-geocoding"}},d={},l=[];function a(e){const n={a:"a",code:"code",h1:"h1",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"configuration-precedence",children:"Configuration Precedence"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"It's possible to override most of the settings in several different ways.  There is a sequence of precedence as follows.  You can always validate the setting by going to the settings in the admin portal."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Querystring parameters that match the name.  For example if you wanted to override the title for one page you'd do the following: ",(0,r.jsx)(n.code,{children:"index.php?title=something+here"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Session overrides.  This means the entire call will use this setting.  ",(0,r.jsx)(n.code,{children:"index.php?override_title=something+here"}),".  Twilio will respect this setting for entire during of the call."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Service body overrides from the Admin UI.  These have a cascading hierarchy of precedence based off the service body above it in the hierarchy tree from your root server.  Either the ",(0,r.jsx)(n.code,{children:"override_service_body_id"})," (which will affect call routing) or ",(0,r.jsx)(n.code,{children:"override_service_body_config_id"})," will pull these settings into the session for use."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Config.php.  Any setting is controllable from within config.php."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Factory defaults.  You can review them on your ",(0,r.jsx)(n.code,{children:"/admin/settings.php"})," page."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["You can completely override any ",(0,r.jsx)(n.code,{children:"config.php"})," file setting as well with additional precedence."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Create a new file called ",(0,r.jsx)(n.code,{children:"config_something.php"}),".  Add whichever settings you want to override.  You do not need every setting, only those you want to override."]}),"\n",(0,r.jsxs)(n.li,{children:["Use the last part after the underscore in your webhook as, for example: ",(0,r.jsx)(n.a,{href:"https://your-yap-server/index.php?override_config=something",children:"https://your-yap-server/index.php?override_config=something"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var r=i(6540);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);