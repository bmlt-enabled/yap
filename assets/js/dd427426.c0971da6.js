"use strict";(self.webpackChunkyapdocs=self.webpackChunkyapdocs||[]).push([[8168],{7e3:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"general/location-lookup-bias","title":"Location Lookup Bias","description":"---","source":"@site/docs/general/location-lookup-bias.md","sourceDirName":"general","slug":"/general/location-lookup-bias","permalink":"/general/location-lookup-bias","draft":false,"unlisted":false,"editUrl":"https://github.com/bmlt-enabled/yap/edit/main/docs/docs/general/location-lookup-bias.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Language Options","permalink":"/general/language-options"},"next":{"title":"Menu Options","permalink":"/general/menu-options"}}');var a=n(4848),i=n(8453);const s={},r="Location Lookup Bias",l={},c=[];function p(e){const o={a:"a",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.header,{children:(0,a.jsx)(o.h1,{id:"location-lookup-bias",children:"Location Lookup Bias"})}),"\n",(0,a.jsx)(o.hr,{}),"\n",(0,a.jsxs)(o.p,{children:["By default location lookups are biased toward the US.  You can create a series of refinements by using the ",(0,a.jsx)(o.code,{children:"$location_lookup_bias"})," in config.php."]}),"\n",(0,a.jsx)(o.p,{children:"For example say you wanted to lookup Bayonne.  By default Bayonne, New Jersey would be interpreted.  If you were intended for France you would set your config as the following:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-php",children:'static $location_lookup_bias = "country:France";\n'})}),"\n",(0,a.jsxs)(o.p,{children:["A full listing of available bias options are available here: ",(0,a.jsx)(o.a,{href:"https://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering",children:"https://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering"}),'.  You can use as few or as many as you want, by separating each set with pipe "|" character.']})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>r});var t=n(6540);const a={},i=t.createContext(a);function s(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);