[{"title":"Excluding a custom format from a Yap query","type":0,"sectionRef":"#","url":"blog/excluding-format-post","content":"Itâ€™s possible to exclude a result from Yap results by using a custom format. For example say you made a Temporary Closure format that had an ID of 2069. You could set in your config.php a custom query, which would exclude those in the response.","keywords":""},{"title":"Blocklist","type":0,"sectionRef":"#","url":"general/blocklist","content":"Blocklist If you want to completely block a specific number you can use the setting as follows (comma-separated). Sometimes it's best to look at the Caller querystring value in your logs or the Twilio console to see the exact number being passed. The number should be in E.164 format. static $blocklist = &quot;&quot;; Copy","keywords":""},{"title":"Configuration Precedence","type":0,"sectionRef":"#","url":"general/configuration-precedence","content":"Configuration Precedence It's possible to override most of the settings in several different ways. There is a sequence of precedence as follows. You can always validate the setting by going to the settings in the admin portal. 1) Querystring parameters that match the name. For example if you wanted to override the title for one page you'd do the following: index.php?title=something+here 2) Session overrides. This means the entire call will use this setting. index.php?override_title=something+here. Twilio will respect this setting for entire during of the call. 3) New Yap 3.0 Service body overrides from the Admin UI. These have a cascading hierarchy of precedence based off the service body above it in the hierarchy tree from your root server. Either the override_service_body_id (which will affect call routing) or override_service_body_config_id will pull these settings into the session for use. 4) Config.php. Any setting is controllable from within config.php. 5) Factory defaults. You can review them on your /admin/settings.php page. You can completely override any config.php file setting as well with additional precedence. 1) Create a new file called config_something.php. Add whichever settings you want to override. You do not need every setting, only those you want to override. 2) Use the last part after the underscore in your webhook as, for example: https://your-yap-server/index.php?override_config=something.","keywords":""},{"title":"Location Lookup Bias","type":0,"sectionRef":"#","url":"general/location-lookup-bias","content":"Location Lookup Bias By default location lookups are biased toward the US. You can create a series of refinements by using the $location_lookup_bias in config.php. For example say you wanted to lookup Bayonne. By default Bayonne, New Jersey would be interpreted. If you were intended for France you would set your config as the following: static $location_lookup_bias = &quot;country:France&quot;; Copy A full listing of available bias options are available here: https://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering. You can use as few or as many as you want, by separating each set with pipe &quot;|&quot; character.","keywords":""},{"title":"Postal Code Lengths","type":0,"sectionRef":"#","url":"general/postal-code-lengths","content":"Postal Code Lengths By default a 5 digit postal code will be asked for. To override this set the following, for instance a 4 digit postal code: static $postal_code_length = 4; Copy","keywords":""},{"title":"Language Options","type":0,"sectionRef":"#","url":"general/language-options","content":"","keywords":""},{"title":"Language Call Routing","type":1,"pageTitle":"Language Options","url":"general/language-options#language-call-routing","content":"You can also create a language selection menu upon dialing in. It will only be available for those that there are resource files for in lang/ folder. If you have some translations, please send them, so they can be merged in. Add a new setting called, specifying the language codes for each language you want included. The order will indicate the order in which it will be played back: static $language_selections = &quot;en-US,pig-latin&quot;; Copy This example will make option 1, English and option 2, pig latin. "},{"title":"Mixing languages and voices","type":1,"pageTitle":"Language Options","url":"general/language-options#mixing-languages-and-voices","content":"Voices can be configured for every language option. For example for Spanish: es_US_voice = &quot;Polly.Penelope&quot;; Copy New Yap 3.0 If you want to route calls to volunteers by language, see the section on Language in Specialized Routing. "},{"title":"State/Province Lookup","type":0,"sectionRef":"#","url":"general/stateprovince-lookup","content":"State/Province Lookup It may be that your instance needs to search multiple states. By default searches will be biased towards the local number state (unless it's tollfree). To enable province lookup set the $province_lookup, variable to true in the config.php file.","keywords":""},{"title":"Setup","type":0,"sectionRef":"#","url":"general/setup","content":"Setup This will require that you have an SSL certificate installed on your webserver to transit a secure connection. This is required by Twilio. Create a new virtual application or add the yap code to an existing folder. You can always find the latest stable version here (be sure download the yap-x-x-x.zip file and not the source code): https://github.com/bmlt-enabled/yap/releases/latest. You can also try out or help test the latest bleeding edge features by installing one of the unreleased versions. The newest version would always be the highest numbered build. Once the application is configured you will need to customize the config.php file. There are several settings there that are documented in that file. There are a number of different ways to utilize the yap platform. You will need to (config.php) enter $twilio_account_sid and $twilio_auth_token. You can find this on your account dashboard. You can also use a different Twilio account using the admin portal under &quot;Service Bodies&quot;. Keep in mind that if a key or keys are set at any parent above, all child service bodies will inherit that key. In order to use a key, just specify override_service_body_id in your webhook with the applicable id. You will need to ensure that the following config.php parameters are set. They should be a service body admin that will be responsible for reading and writing data back to your BMLT. This will not work with the &quot;Server Administrator&quot; account. The user should be at the highest level of access in your BMLT hierarchy that you require access to. static $bmlt_username = &quot;&quot;;static $bmlt_password = &quot;&quot;; Copy Be sure to get a Google Maps API key. Specify this in config.php as the value for $google_maps_api_key. Make sure you have &quot;Google Maps Geocoding API&quot; and &quot;Google Maps Time Zone API&quot; enabled on your credentials. This key must be separate from your BMLT key with no server restrictions, this is safe because yap never passes the key client side. You can login into your Google API console here: https://console.cloud.google.com/apis/. This article may be useful https://bmlt.app/google-maps-api-keys-and-geolocation-issues/. Try testing that your application actually is functioning properly by opening a browser http://example.com/index.php. You will need to set up a Twilio account, and do the following. Purchase a phone number (typically you would buy one for your locale, tollfree is pretty much unnecessary these days). Configure that number to point to a Webook. It would be something like https://example.com/index.php. Version 3.x You will need to set up a new MySQL database. Be sure to set up backups on your database as well. Your hosting provider may cover this more. Once you've done that, set the following in your config.php. static $mysql_hostname = &quot;&quot;;static $mysql_username = &quot;&quot;;static $mysql_password = &quot;&quot;;static $mysql_database = &quot;&quot;; Copy You can test whether or not you are properly configured by going to https://example.com/upgrade-advisor.php. This will also run MySQL scripts to initialize/update your database. Make a call to your number and try it out. If there is a problem the debugger in the Twilio console will let you know why. Most likely you did not setup your config.php file correctly.","keywords":""},{"title":"Tollfree Bias","type":0,"sectionRef":"#","url":"general/tollfree-bias","content":"Tollfree Bias Tollfree is independent of any state/province bias. To enable a specific bias, add static $toll_free_province_bias to your config.php, and set to the two letter state bias. Example $toll_free_province_bias = &quot;TX&quot;, will bias to Texas.","keywords":""},{"title":"Voice Greeting","type":0,"sectionRef":"#","url":"general/voice-greeting","content":"Voice Greeting It's possible to record a custom voice prompt and have it play back instead of the traditional voice engine. Set the following: *Keep in mind that this will override the main menu as well, so you should record the relevant prompts (i.e. press 1 to find someone to talk too... press 2 to find a meeting) static $en_US_greeting = &quot;https://example.com/your-recorded-greeting.mp3&quot; Copy You can also set a custom greeting for voicemail. static $en_US_voicemail_greeting = &quot;https://example.com/your-recorded-greeting.mp3&quot; Copy These settings are overridable from within each service body call handling.","keywords":""},{"title":"Voice Recognition Optimizations","type":0,"sectionRef":"#","url":"general/voice-recognition-optimizations","content":"Voice Recognition Optimizations It's possible to set the expected spoken language, for recognition by setting the following variable in config.php to the culture variant. The default is en-US, which is US English. Use the this chart to find the code of your preference https://www.twilio.com/docs/api/twiml/gather#languagetags. static $gather_language = &quot;en-US&quot;; Copy You can also set some expected words or hints, to help the voice recognition engine along. Use the setting by separating words with commas. You can use phrases as well. Each hint may not be more than 100 characters (including spaces). You can use up to 500 hints. static $gather_hints = &quot;&quot;; Copy New Yap 3.x Voice recognition for input gathering is turned on by default, to turn it off you can do the following. static $speech_gathering = false; Copy","keywords":""},{"title":"Checking the call routing","type":0,"sectionRef":"#","url":"helpline/checking-call-routing","content":"Checking the call routing There is a very simple way to check where a could would be routed to. curl https://example.com/yap/helpline-search.php?Digits=Turkey,NC Copy","keywords":""},{"title":"Custom Extensions","type":0,"sectionRef":"#","url":"helpline/custom-extensions","content":"Custom Extensions It's possible to make custom extensions with the use of a few settings. Add an option to your $digit_map_search_type that points to SearchType::CUSTOM_EXTENSIONS.Add mappings in $custom_extensions for each extension you want to add. For example if you wanted to redirect extension &quot;365&quot; to a specific phone number you would do the below: static $custom_extensions = [365 =&gt; '555-555-1212']; Copy Add an option for the mp3 or wav file prompt that will play back all the choices in the custom extensions' menu $en_US_custom_extensions_greeting (be sure to specify recordings for each language that you offer). To test, call in dial the digit map choice, and you should hear the audio file prompt playback. Enter the extension number followed by the pound sign (it might be good to inform the end-user in your prompt to press pound after they dial the appropriate extension). Also to note is that the main menu greeting will not inform the user about the custom extensions option, so you may also want to set $en_US_greeting to include that information.","keywords":""},{"title":"Using A Different BMLT server for routing","type":0,"sectionRef":"#","url":"helpline/different-bmlt-for-routing","content":"Using A Different BMLT server for routing In order to specify a different BMLT root server for call routing but not for meeting list lookups, set the following variable in config.php. static $helpline_bmlt_root_server = &quot;&quot;; Copy","keywords":""},{"title":"Force Dialing","type":0,"sectionRef":"#","url":"helpline/force-dialing","content":"Force Dialing You might want to force a particular Twilio number to just call another number. Just use the following webhook. /helpline-search.php?ForceNumber=8885551212 or for extension dialing /helpline-search.php?ForceNumber=8885551212%7Cwwww700. Each w is a 1 second pause. In some cases, when using 1 second pauses you may want to indicate that there is something happening to the end user as there will be a delay. If you would like there to be a CAPTCHA to prevent robocalls + fax machines, you can add this to your query. &amp;Captcha=1 And/or, if you would like to have a basic waiting message, but no CAPTCHA use. &amp;WaitingMessage=1 These options can be combined.","keywords":""},{"title":"Force Helpline Routing","type":0,"sectionRef":"#","url":"helpline/force-helpline-routing","content":"Force Helpline Routing You can force the helpline option to go directly to a specific service body by specifying the following on your webhook in Twilio. ?override_service_body_id=x The service body id would be found in your BMLT root server. It must exist in that root server instance to be routed correctly.","keywords":""},{"title":"Helpline Search Radius","type":0,"sectionRef":"#","url":"helpline/helpline-search-radius","content":"","keywords":""},{"title":"Helpline Search Radius","type":1,"pageTitle":"Helpline Search Radius","url":"helpline/helpline-search-radius#helpline-search-radius","content":" Change the default helpline search radius, this is in miles. You can change this in your config.php with the following: static $helpline_search_radius = 30; Copy This would set the radius to a maximum of 30 miles and is the default. "},{"title":"Helpline Call Routing","type":0,"sectionRef":"#","url":"helpline/helpline-call-routing","content":"Helpline Call Routing The helpline router utilizes a BMLT server (2.9.0 or later), that has helpline numbers properly configured in the &quot;Service Body Administration&quot; section. A prompt will ask for a piece of location information in turn it will look up latitude and longitude and then send that information to the BMLT root server you have configured. You can also tie this into an existing extension based system, say for example Grasshopper. If you want to dial an extension just add something like 555-555-5555|wwww700 for example after the helpline field on the BMLT Service Body Administration. In this case it's instructing to dial 555-555-5555 and wait 4 seconds and then dial 700.","keywords":""},{"title":"Music On Hold","type":0,"sectionRef":"#","url":"helpline/music-on-hold","content":"Music On Hold Music on hold will play when doing volunteer routing which is configurable from within the service body call handling. You can specify one or more URLs to an MP3 file or Shoutcast stream. Separate them by commas. There are also some free alternatives. They are licensed by Creative Commons. They are playlists themselves so they may not be combined with any other URLs. Ambient: https://twimlets.com/holdmusic?Bucket=com.twilio.music.ambient - [license]Classical (default): https://twimlets.com/holdmusic?Bucket=com.twilio.music.classical - [license]Electronica: https://twimlets.com/holdmusic?Bucket=com.twilio.music.electronica - [license]Guitars: https://twimlets.com/holdmusic?Bucket=com.twilio.music.guitars - [license]New Age: https://twimlets.com/holdmusic?Bucket=com.twilio.music.newage - [license]Rock: https://twimlets.com/holdmusic?Bucket=com.twilio.music.rock - [license]Soft Rock: https://twimlets.com/holdmusic?Bucket=com.twilio.music.soft-rock - [license] Music on Hold loops indefinitely.","keywords":""},{"title":"Using Hidden Service Bodies For Helpline Lookups","type":0,"sectionRef":"#","url":"helpline/hidden-service-bodies","content":"Using Hidden Service Bodies For Helpline Lookups It is possible to create a service body with an unpublished group in order create additional routing for service bodies that may not exist in a given root server. Once those service bodies have been populated and the unpublished meetings are added, you can make use of the helpline field to route calls. You will also need to add to the config.php three additional variables. This allows yap to authenticate to the root server and retrieve the unpublished meetings. This is required as a BMLT root server by design will not return unpublished meetings in the semantic interface. static $helpline_search_unpublished = true;static $bmlt_username = &quot;&quot;;static $bmlt_password = &quot;&quot;; Copy You will need to also ensure that PHP has write access to write to this folder, in order to store the authentication cookie from the BMLT root server. NOTE: This will not work for the Tomato server, because there is no concept of authentication.","keywords":""},{"title":"Skipping Helpline Call Routing","type":0,"sectionRef":"#","url":"helpline/skipping-helpline-call-routing","content":"Skipping Helpline Call Routing When configuring the TwiML app instead of pointing to index.php point to input-method.php?Digits=2. If you still want the title to display also point to input-method.php?Digits=2&amp;PlayTitle=1. This could useful for wiring up to a Grasshopper extension. Typically you set this as Department Extension and have your prompt instruct to press a series of keypresses. For example, if you set this up as extension 1, from within you employee extensions you would instruct the caller to press *1 (star one) for finding meetings.","keywords":""},{"title":"SMS Volunteer Routing","type":0,"sectionRef":"#","url":"helpline/sms-volunteer-routing","content":"SMS Volunteer Routing This is enabled in the service body call handling through the drop down selecting &quot;Volunteer and SMS&quot;. There are two routing strategies, random or blast. Blast will send to all active volunteers at that moment in time. This is configured similarly to phone volunteer routing. You can add shifts as SMS or Phone &amp; SMS. The SMS trigger keyword by default is &quot;talk&quot;, followed by the location information. You can override this by using the sms_helpline_keyword setting. You cannot use the word &quot;help&quot; or &quot;stop&quot; by itself as these are reserved keywords by Twilio. You could however, use a combination of words like &quot;get help&quot; or &quot;need help&quot;. As a safety measure, if no volunteers are specified with &quot;SMS&quot;, but it's enabled on the service body call handling, it will send to the primary contact number.","keywords":""},{"title":"Tomato Helpline Routing","type":0,"sectionRef":"#","url":"helpline/tomato-helpline-routing","content":"Tomato Helpline Routing In some cases you might want make use of aggregated helpline information. This might be a bit nuanced, but it exists. One thing to note about this setting, is that Tomato is not able to get service body call handling, so it will be limited to helpline field routing only. You can use this in your config.php, however keep in mind that this would break your admin portal. Typically this would be used with a webhook as such. override_tomato_helpline_routing=true","keywords":""},{"title":"Specialized Routing","type":0,"sectionRef":"#","url":"helpline/specialized-routing","content":"","keywords":""},{"title":"Gender Routing","type":1,"pageTitle":"Specialized Routing","url":"helpline/specialized-routing#gender-routing","content":"New Yap 3.0 Gender routing allows you to specify volunteers as Male or Female to enable callers to speak with volunteers of their gender selection. This setting is configured from within each service body call handling. "},{"title":"Shadow (Volunteer Training)","type":1,"pageTitle":"Specialized Routing","url":"helpline/specialized-routing#shadow-volunteer-training","content":"New Yap 3.0 This feature allow you to set up volunteers as trainees or trainers. If a volunteer is set as a &quot;trainee&quot; and they connected to a helpline call, a &quot;trainer&quot; (or multiple trainers), will all be called and added to volunteer call to listen in. The trainer cannot speak, only listen. This feature is configured in the administrative portal under each specific volunteer. "},{"title":"Language","type":1,"pageTitle":"Specialized Routing","url":"helpline/specialized-routing#language","content":"New Yap 3.0 You can tag volunteers to zero or more languages (English is the default). Be sure to set the list of languages you want your callers to be prompted with here. "},{"title":"Voicemail","type":0,"sectionRef":"#","url":"helpline/voicemail","content":"","keywords":""},{"title":"Voicemail Recordings","type":1,"pageTitle":"Voicemail","url":"helpline/voicemail#voicemail-recordings","content":"NEW in Yap 3.x Recordings are now available in the admin portal under &quot;Service Bodies &gt; Call Records&quot; for each respective area. "},{"title":"Voicemail Notifications to SMS","type":1,"pageTitle":"Voicemail","url":"helpline/voicemail#voicemail-notifications-to-sms","content":"NEW in Yap 3.x You can set up any volunteer to receive voicemail notifications. Within the volunteer setting, set the dropdown Responder to &quot;Enabled&quot;. If you specify a Primary Contact Number, it will SMS a link to the recording that person when a voicemail is left. You can also comma separate the values if you want it to go to more than one person. "},{"title":"Voicemail Notifications to Email","type":1,"pageTitle":"Voicemail","url":"helpline/voicemail#voicemail-notifications-to-email","content":"You can also optionally use email. You will have to enable this by adding an email address under the Primary Contact Email. You can optionally supply a list of comma separated emails for multiple recipients. You will also need to ensure that the following settings are in your config.php. static $smtp_host = ''; // the smtp serverstatic $smtp_username = ''; // the smtp usernamestatic $smtp_password = ''; // the smtp passwordstatic $smtp_secure = ''; // either ssl (port 486) or more securely tls (port 587)static $smtp_from_address = ''; // the address where the email will be sent fromstatic $smtp_from_name = ''; // the label name on the from address Copy If you need to, for some reason, to override the port here is another optional setting. static $smtp_alt_port = ''; // enter the integer for the respective to use Copy If you do not receive an email, check your server logs. There should be some good information there. Also the upgrade advisor should give you some information about what might be missing as long as $smtp_host is set. "},{"title":"Adding Location Text","type":0,"sectionRef":"#","url":"meeting-search/adding-location-text","content":"Adding Location Text New Yap 3.0This feature enables you to include the name of the meeting location in search results, by default it is disabled. If you want to enable this feature add the following to your config.php file. static $include_location_text = true; Copy","keywords":""},{"title":"Volunteer Routing","type":0,"sectionRef":"#","url":"helpline/volunteer-routing","content":"Volunteer Routing Incompatible with Yap 1.x Volunteer Dialers, you will have reconfigure your setup. 1) You will need to ensure that the following config.php parameters are set. They should be a service body admin that will be responsible for reading and writing data back to your BMLT. This will not work with the &quot;Server Administrator&quot; account. static $bmlt_username = &quot;&quot;;static $bmlt_password = &quot;&quot;; Copy 2) You will need to specify Twilio API parameters. You can find this on your account dashboard when you login into Twilio. static $twilio_account_sid = &quot;&quot;;static $twilio_auth_token = &quot;&quot;; Copy 3) Head over to your admin login page. https://your-yap-instance/admin. 4) Login with any credentials from your BMLT server. 5) Go to the Service Bodies tab and click &quot;Configure&quot;. From there you should see a check box to enable Volunteer Routing. Check it off and save. 6) Go to Volunteers, and you should see that service body in the dropdown, and select it. 7) Click Add Volunteer. Fill out the Name field, and then click the &quot;+&quot; to expand out the rest of the details. You should be able to start populating the number and shift information. You will also have to click &quot;Enable&quot; in the bottom right. Once you are done, click &quot;Save Volunteers&quot;. 8) You can also sort the sequence by dragging and dropping the volunteer cards. 9) Go to Schedules to preview your changes. Select your service body from the dropdown, and it should render onto the calendar. 10) You can now test to see if things are working. * Volunteer Routing Redirect: You do this by setting in the Service Body Call Handling the Volunteer Routing mechanism to &quot;Volunteers Redirect&quot; and specifying the respective Service Body Id in the &quot;Volunteers Redirect Id&quot; field.* Forced Caller Id: This setting changes the outgoing display caller id.* Call Timeout: This is the number of seconds before trying the next number for volunteer routing. Copy","keywords":""},{"title":"Adding Map Links","type":0,"sectionRef":"#","url":"meeting-search/adding-map-links","content":"Adding Map Links Some older handsets are not capable of rendering maps links. If you want to enable this feature add the following to your config.php file. static $include_map_link = true; Copy","keywords":""},{"title":"Custom Query","type":0,"sectionRef":"#","url":"meeting-search/custom-query","content":"Custom Query In some cases you may want use a custom BMLT query. For example, if you have a small service body you may want to ignore the day of the week concept that is the default behavior in searches. You can do this with the setting custom_query. This setting also supports the use of some magic variables. For example say you want to always use the service body id for making queries, you could create the settings as follows: static $custom_query=&quot;&amp;services[]={SETTING_SERVICE_BODY_ID}&quot; Because there is a setting called service_body_id already and assuming you had overridden it, meeting searches will now send a query to the BMLT and return accordingly. You could have also hardcoded it if you wanted. Like any other variable, you can set this on the querystring as a session wide override. In some cases you may need to combine this with the result_count_max to increase the limit of how many results are returned. You may also need to use sms_ask, as many results could be returned. There are a couple of other stock magic variables. {DAY} - will use the day of today / tomorrow.{LATITUDE} - the latitude of the lookup.{LONGITUDE} - the longitude of the lookup. If you do not have {LATITUDE} or {LONGITUDE} in your custom query, it will automatically skip the location gathering aspects of the meeting search menus and go directly to returning results.","keywords":""},{"title":"Disabling Postal Code Gathering","type":0,"sectionRef":"#","url":"meeting-search/disabling-postal-code-gathering","content":"Disabling Postal Code Gathering To disable postal code lookups set your config as follows: static $disable_postal_code_gather = true; Copy","keywords":""},{"title":"Grace Period","type":0,"sectionRef":"#","url":"meeting-search/grace-period","content":"Grace Period This is so that yap still returns results for meetings that have already started. By default a 15 minute grace period will be applied. This can be adjusted by setting $grace_minutes in your config.php. static $grace_minutes = 10; Copy This would set the grace period to ten (10) minutes.","keywords":""},{"title":"Ignoring Certain Formats","type":0,"sectionRef":"#","url":"meeting-search/ignoring-certain-formats","content":"Ignoring Certain Formats In some cases you might want to ignore a specific format. Add the following setting with the formats you want to exclude. Separate each with a comma. static $ignore_formats = &quot;ASM&quot;; Copy","keywords":""},{"title":"Meeting Search Radius","type":0,"sectionRef":"#","url":"meeting-search/meeting-search-radius","content":"Meeting Search Radius Change the default meeting search radius, this can be in miles or a negative number which would set the radius at the first n results. You can change this in your config.php with the following: static $meeting_search_radius = 30; Copy This would set the radius to a maximum of 30 miles. static $meeting_search_radius = -50; Copy This would set the radius at the first 50 results and is the default. More information on how the BMLT uses search radius is here: https://bmlt.app/how-auto-radius-works/","keywords":""},{"title":"Mobile Check","type":0,"sectionRef":"#","url":"meeting-search/mobile-check","content":"Mobile Check You can configure the SMS results to check if the device is mobile and not a landline or voip before sending. If not a mobile device SMS will not be sent. Set your configuration to have static $mobile_check = true; Copy","keywords":""},{"title":"Post Call Options","type":0,"sectionRef":"#","url":"meeting-search/post-call-options","content":"","keywords":""},{"title":"Making SMS results for voice calls optional","type":1,"pageTitle":"Post Call Options","url":"meeting-search/post-call-options#making-sms-results-for-voice-calls-optional","content":"The default of the system is to send an SMS after each voice meeting result. As an option to you audience you can add the following parameter to your config.php file. static $sms_ask = true; Copy By setting this, a prompt will be played at the end of the results, asking if they would like the results texted to them. If they do not respond the call will automatically hang up in 10 seconds. "},{"title":"Infinite Searches","type":1,"pageTitle":"Post Call Options","url":"meeting-search/post-call-options#infinite-searches","content":"You can provide an option to allow someone to search again. Just set: static $infinite_searching = true; Copy "},{"title":"Results Counts Maximums","type":0,"sectionRef":"#","url":"meeting-search/results-counts-maximums","content":"Results Counts Maximums The default number of meeting results is 5. You can change this in your config.php with the following: static $result_count_max = 10; Copy This would set to a maximum of ten (10) results.","keywords":""},{"title":"SMS Gateway","type":0,"sectionRef":"#","url":"meeting-search/sms-gateway","content":"SMS Gateway In order to use SMS to get a list of meetings you will configure Messaging to point to Webook sms-gateway.php. Then you can send a zip code, county or city to your phone number and get back a response.","keywords":""},{"title":"SMS Summary Page","type":0,"sectionRef":"#","url":"meeting-search/sms-summary-page","content":"SMS Summary Page You can configure the SMS results as a summary page link. Set your configuration to have static $sms_summary_page = true; Copy","keywords":""},{"title":"Sorting Results","type":0,"sectionRef":"#","url":"meeting-search/sorting-results","content":"Sorting Results By default the results will be sorted starting with today and then moving on to the next result. If latitude and longitude are not used in the meeting query, the first meeting latitude and longitude will be the assumed timezone. If you wanted to hardcode the sorting to start with another day you could use say for Wednesday use static $meeting_result_sort = 4;. Or you can keep a more natural flow by setting it to 1 which would sort Sunday to Saturday.","keywords":""},{"title":"Contribute","type":0,"sectionRef":"#","url":"miscellaneous/contribute","content":"Contribute Fork the yap repo here and send a pull request. For testing locally, run the yap server and then use ngrok. Grab the ngrok hostname that is generated and then use that in your Twilio settings. You get an instant proxy to your local services to step through and debug.","keywords":""},{"title":"Connectors","type":0,"sectionRef":"#","url":"miscellaneous/connectors","content":"Connectors Yap has an API, and so there are other ways to pull out Yap information. Facebook Messenger BotAlexa Skill","keywords":""},{"title":"Logging/Debugging","type":0,"sectionRef":"#","url":"miscellaneous/loggingdebugging","content":"Logging/Debugging To enable advanced debugging set in your config.php static $debug = true;","keywords":""},{"title":"Playback for the Just For Today Meditation","type":0,"sectionRef":"#","url":"miscellaneous/playback-for-the-just-for-today-meditation","content":"Playback for the Just For Today Meditation This will add an option on the main menu to press 3 to playback the Just For Today meditation. static $jft_option = true; Copy","keywords":""},{"title":"Upgrading","type":0,"sectionRef":"#","url":"miscellaneous/upgrading","content":"Upgrading Make a new folder with the newer version and copy over the config.php. Once you feel comfortable you can delete the older folder and rename it. Be sure to run the upgrade-advisor.php","keywords":""},{"title":"Upgrading from Yap 1.x to Yap 2.x","type":0,"sectionRef":"#","url":"miscellaneous/upgrading-from-yap-1x-to-yap-2x","content":"Upgrading from Yap 1.x to Yap 2.x Follow the upgrade steps as you normally do above. You will also need to follow item #3 &amp; #4 under Setup, to add the Twilio credentials. You can check that everything is functioning by going to the upgrade advisor http://your-instance/upgrade-advisor.php","keywords":""},{"title":"Upgrading from Yap 2.x to Yap 3.x","type":0,"sectionRef":"#","url":"miscellaneous/upgrading-from-yap-2x-to-yap-3x","content":"Upgrading from Yap 2.x to Yap 3.x Follow the upgrade steps as you normally do above. You will also need to follow item #8 under Setup, to add the database configuration. You can check that everything is functioning by going to the upgrade advisor http://your-instance/upgrade-advisor.php If you need to re-import your data from your root server you can run the following script. This will delete any changes you have made since you upgraded. TRUNCATE TABLE config;DELETE FROM flags WHERE flag_name='root_server_data_migration'; Copy","keywords":""},{"title":"Call Blasting and other Call Strategies Explained","type":0,"sectionRef":"#","url":"videos/call-blasting-and-other-call-strategies-explained","content":"Call Blasting and other Call Strategies Explained","keywords":""},{"title":"Configure Twilio for Shared Yap Server","type":0,"sectionRef":"#","url":"videos/configure-twilio-for-shared-yap-server","content":"Configure Twilio for Shared Yap Server","keywords":""},{"title":"Configure Gender Routing","type":0,"sectionRef":"#","url":"videos/configure-gender-routing","content":"Configure Gender Routing","keywords":""},{"title":"Configure Your Number With Twilio","type":0,"sectionRef":"#","url":"videos/configure-your-number-with-twilio","content":"Configure Your Number With Twilio","keywords":""},{"title":"Manage Volunteers","type":0,"sectionRef":"#","url":"videos/manage-volunteers","content":"Manage Volunteers","keywords":""},{"title":"Redirect Calls to Existing Helpline","type":0,"sectionRef":"#","url":"videos/redirect-calls-to-existing-helpline","content":"Redirect Calls to Existing Helpline","keywords":""}]