name: 'pull-request'

on:
  pull_request:
    branches: [ 'main' ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    strategy:
      fail-fast: false
      matrix:
        php:
          - "8.1"
          - "8.2"
          - "8.3"

    steps:
      - uses: actions/checkout@v4
        id: code-checkout

      - name: php ${{ matrix.php }} üêò
        id: setup-php
        uses: shivammathur/setup-php@2.30.1
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2.4.1

      - name: Validate composer.json and composer.lock
        id: composer-validate
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        id: install-dependencies
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php }}
          args: --prefer-dist --no-progress

      - name: PHPCS checker
        id: php-codesniffer
        run: vendor/squizlabs/php_codesniffer/bin/phpcs

      - name: Test
        id: run-tests
        run: |
          cp config.test.php config.php
          cp .env.pipeline .env
          vendor/bin/pest --log-junit tests/test-results.xml
          docker build . -t yap
          docker run -d -p 3100:80 -e APP_DEBUG=true ENVIRONMENT=test GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY -v .:/var/www/html/yap yap
          npm install
          npx cypress run
        env:
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: "tests/*.xml"

      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#yap-automation'
        if: failure()
